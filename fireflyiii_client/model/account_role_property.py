# coding: utf-8

"""
    Firefly III API v1.5.6

    This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00   # noqa: E501

    The version of the OpenAPI document: 1.5.6
    Contact: james@firefly-iii.org
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireflyiii_client import schemas  # noqa: F401


class AccountRoleProperty(
    schemas.EnumBase,
    schemas.StrBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneStrMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Is only mandatory when the type is asset.
    """


    class MetaOapg:
        format = 'string'
        enum_value_to_name = {
            "defaultAsset": "DEFAULT_ASSET",
            "sharedAsset": "SHARED_ASSET",
            "savingAsset": "SAVING_ASSET",
            "ccAsset": "CC_ASSET",
            "cashWalletAsset": "CASH_WALLET_ASSET",
            schemas.NoneClass.NONE: "NONE",
        }
    
    @schemas.classproperty
    def DEFAULT_ASSET(cls):
        return cls("defaultAsset")
    
    @schemas.classproperty
    def SHARED_ASSET(cls):
        return cls("sharedAsset")
    
    @schemas.classproperty
    def SAVING_ASSET(cls):
        return cls("savingAsset")
    
    @schemas.classproperty
    def CC_ASSET(cls):
        return cls("ccAsset")
    
    @schemas.classproperty
    def CASH_WALLET_ASSET(cls):
        return cls("cashWalletAsset")
    
    @schemas.classproperty
    def NONE(cls):
        return cls(None)


    def __new__(
        cls,
        *_args: typing.Union[None, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AccountRoleProperty':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
        )
